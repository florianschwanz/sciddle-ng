pipeline {
    agent {
        node {
            label 'master'
        }
    }
    triggers {
        pollSCM('H/5 * * * *')
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
    }
    parameters {
        string(name: 'BASE_REF', defaultValue: 'https://sciddle.intero.berlin/sciddle-s4f/', description: 'URL the app shall be accessible from')
        string(name: 'WEB_ROOT', defaultValue: '/var/www/sciddle/sciddle-s4f', description: 'Web root directory for this app')
    }
    stages {
        stage('Clean') {
            steps {
                sh "rm -rf ${WORKSPACE}/dist/*"
                sh "rm -rf ${WORKSPACE}/reports/*"
                sh "rm -rf ${WORKSPACE}/coverage/*"
                sh "mkdir -p ${WORKSPACE}/reports"
            }
        }
        stage('Init submodules') {
            steps {
                sh "git submodule init"
                sh "git submodule update"
            }
        }
        stage('Build Angular') {
            steps {
                // Hack since angular.json replacement cannot replace files other than ts at the moment
                sh "cp ${WORKSPACE}/src/index-s4f.html ${WORKSPACE}/src/index.html"
                sh "cp ${WORKSPACE}/src/favicon-s4f.ico ${WORKSPACE}/src/favicon.ico"
                sh "npm install"
                sh "npm run build-prod-s4f -- --verbose --base-href ${params.BASE_REF}"
            }
        }
        stage('Lint') {
            steps {
                sh "npm run lint-junit"
                junit allowEmptyResults: true, testResults: 'reports/**/lint-results.xml'
            }
        }
        stage('Compodoc') {
            steps {
                sh "npm run compodoc"
                publishHTML (target: [
                  allowMissing: true,
                  alwaysLinkToLastBuild: false,
                  keepAll: true,
                  reportDir: 'reports/documentation',
                  reportFiles: 'index.html',
                  reportName: "Compodoc"
                ])
            }
        }
        stage('Test') {
            steps {
                sh "npm run test"
                junit allowEmptyResults: true, testResults: 'reports/**/test-results.xml'
            }
        }
        stage('Deploy') {
            steps {
                sh "mkdir -p ${params.WEB_ROOT}"
                sh "rm -rf ${params.WEB_ROOT}/*"
                sh "cp -R ${WORKSPACE}/dist/sciddle-s4f/* ${params.WEB_ROOT}"
            }
        }
    }
}
